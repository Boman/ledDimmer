Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o (exit)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
                              ./src/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                              ./src/uart/uart.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memset.o)
                              ./src/main.o (memset)

Allocating common symbols
Common symbol       size              file

temp                0x1               ./src/main.o
flash_data          0x100             ./src/main.o
messageBuffer       0xb               ./src/main.o
hex_buffer          0x5               ./src/main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
LOAD ./src/uart/uart.o
LOAD ./src/main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a
Address of section .text set to 0x1f000

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x000000000001f000      0x8d6
 *(.vectors)
 .vectors       0x000000000001f000       0x8c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x000000000001f000                __vectors
                0x000000000001f000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000000001f08c                . = ALIGN (0x2)
                0x000000000001f08c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000001f08c        0x0 linker stubs
 *(.trampolines*)
                0x000000000001f08c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000001f08c                __ctors_start = .
 *(.ctors)
                0x000000000001f08c                __ctors_end = .
                0x000000000001f08c                __dtors_start = .
 *(.dtors)
                0x000000000001f08c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000001f08c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x000000000001f08c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000001f08c        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000001f098       0x1a /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
                0x000000000001f098                __do_copy_data
 .init4         0x000000000001f0b2       0x10 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                0x000000000001f0b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000001f0c2        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000000001f0ca        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x000000000001f0ca                __vector_22
                0x000000000001f0ca                __vector_1
                0x000000000001f0ca                __vector_32
                0x000000000001f0ca                __vector_34
                0x000000000001f0ca                __vector_24
                0x000000000001f0ca                __vector_12
                0x000000000001f0ca                __bad_interrupt
                0x000000000001f0ca                __vector_6
                0x000000000001f0ca                __vector_31
                0x000000000001f0ca                __vector_3
                0x000000000001f0ca                __vector_23
                0x000000000001f0ca                __vector_30
                0x000000000001f0ca                __vector_25
                0x000000000001f0ca                __vector_11
                0x000000000001f0ca                __vector_13
                0x000000000001f0ca                __vector_17
                0x000000000001f0ca                __vector_19
                0x000000000001f0ca                __vector_7
                0x000000000001f0ca                __vector_27
                0x000000000001f0ca                __vector_5
                0x000000000001f0ca                __vector_33
                0x000000000001f0ca                __vector_4
                0x000000000001f0ca                __vector_9
                0x000000000001f0ca                __vector_2
                0x000000000001f0ca                __vector_15
                0x000000000001f0ca                __vector_8
                0x000000000001f0ca                __vector_26
                0x000000000001f0ca                __vector_14
                0x000000000001f0ca                __vector_10
                0x000000000001f0ca                __vector_16
                0x000000000001f0ca                __vector_18
 .text          0x000000000001f0ce      0x328 ./src/uart/uart.o
                0x000000000001f0ce                __vector_20
                0x000000000001f132                __vector_21
                0x000000000001f18e                uart_init
                0x000000000001f1c0                uart_getc
                0x000000000001f1f4                uart_putc
                0x000000000001f21e                uart_puts
                0x000000000001f246                uart_puts_p
                0x000000000001f262                __vector_28
                0x000000000001f2c6                __vector_29
                0x000000000001f322                uart1_init
                0x000000000001f354                uart1_getc
                0x000000000001f388                uart1_putc
                0x000000000001f3b2                uart1_puts
                0x000000000001f3da                uart1_puts_p
 .text          0x000000000001f3f6      0x4ce ./src/main.o
                0x000000000001f440                decodeMessage
                0x000000000001f47e                program_page
                0x000000000001f51e                parse_hex_input
                0x000000000001f7ce                main
 .text          0x000000000001f8c4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text          0x000000000001f8c4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .text          0x000000000001f8c4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .text          0x000000000001f8c4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memset.o)
                0x000000000001f8c4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000001f8c4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x000000000001f8c4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000001f8c4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000001f8c4        0xe /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memset.o)
                0x000000000001f8c4                memset
                0x000000000001f8d2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000001f8d2        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                0x000000000001f8d2                exit
                0x000000000001f8d2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000001f8d2        0x4 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000001f8d6                _etext = .

.data           0x0000000000800100       0x28 load address 0x000000000001f8d6
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .data          0x0000000000800100        0x0 ./src/uart/uart.o
 .data          0x0000000000800100       0x27 ./src/main.o
                0x0000000000800125                boot_state
                0x0000000000800126                flash_page_flag
 .data          0x0000000000800127        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800127        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800127        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800127        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memset.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800128                . = ALIGN (0x2)
 *fill*         0x0000000000800127        0x1 00
                0x0000000000800128                _edata = .
                0x0000000000800128                PROVIDE (__data_end, .)

.bss            0x0000000000800128      0x1a9
                0x0000000000800128                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800128        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .bss           0x0000000000800128       0x8a ./src/uart/uart.o
 .bss           0x00000000008001b2        0xe ./src/main.o
                0x00000000008001b2                hex_addr
                0x00000000008001b4                flash_page
                0x00000000008001b6                hex_check
                0x00000000008001b8                flash_cnt
                0x00000000008001ba                parser_state
                0x00000000008001bb                hex_cnt
                0x00000000008001bc                hex_size
                0x00000000008001bd                hex_data_cnt
                0x00000000008001be                hex_type
                0x00000000008001bf                hex_checksum
 .bss           0x00000000008001c0        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .bss           0x00000000008001c0        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .bss           0x00000000008001c0        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .bss           0x00000000008001c0        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memset.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008001c0      0x111 ./src/main.o
                0x00000000008001c0                temp
                0x00000000008001c1                flash_data
                0x00000000008002c1                messageBuffer
                0x00000000008002cc                hex_buffer
                0x00000000008002d1                PROVIDE (__bss_end, .)
                0x000000000001f8d6                __data_load_start = LOADADDR (.data)
                0x000000000001f8fe                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008002d1        0x0
                0x00000000008002d1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008002d1                PROVIDE (__noinit_end, .)
                0x00000000008002d1                _end = .
                0x00000000008002d1                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x738
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .stab          0x00000000000006cc       0x6c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memset.o)
                                         0x78 (size before relaxing)

.stabstr        0x0000000000000000       0x82
 *(.stabstr)
 .stabstr       0x0000000000000000       0x82 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ledDimmerBootLoader.elf elf32-avr)
LOAD linker stubs
