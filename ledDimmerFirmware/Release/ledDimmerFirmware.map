Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
                              ./src/ledState.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o (exit)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
                              ./src/irmp/irmp.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                              ./src/uart/uart.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
                              ./src/irmp/irmp.o (memcpy_P)

Allocating common symbols
Common symbol       size              file

deltaR              0x1               ./src/ledState.o
signR               0x1               ./src/ledState.o
deltaB              0x1               ./src/ledState.o
signB               0x1               ./src/ledState.o
pwm_mask            0x4               ./src/ledDimmer.o
messageNumber       0x1               ./src/main.o
deltaG              0x1               ./src/ledState.o
pwm_sync            0x1               ./src/ledDimmer.o
pwm_timing_tmp      0x8               ./src/ledDimmer.o
signG               0x1               ./src/ledState.o
errG                0x2               ./src/ledState.o
pwm_setting         0x3               ./src/ledDimmer.o
messageLength       0x1               ./src/main.o
messageType         0x1               ./src/main.o
errB                0x2               ./src/ledState.o
deltaT              0x2               ./src/ledState.o
pwm_timing          0x8               ./src/ledDimmer.o
pwm_mask_tmp        0x4               ./src/ledDimmer.o
errR                0x2               ./src/ledState.o
pwm_setting_tmp     0x8               ./src/ledDimmer.o
messageBuffer       0x1d              ./src/main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
LOAD ./src/uart/uart.o
LOAD ./src/irmp/irmp.o
LOAD ./src/irmp/irmpextlog.o
LOAD ./src/ledDimmer.o
LOAD ./src/ledState.o
LOAD ./src/main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x17e8
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000000000008c       0x77 ./src/irmp/irmp.o
 .progmem.data  0x0000000000000103      0x200 ./src/ledDimmer.o
                0x0000000000000103                pwmtable
 .progmem.data  0x0000000000000303       0x28 ./src/ledState.o
                0x0000000000000303                speedSteps
                0x000000000000032c                . = ALIGN (0x2)
 *fill*         0x000000000000032b        0x1 00
                0x000000000000032c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000032c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000032c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000032c                __ctors_start = .
 *(.ctors)
                0x000000000000032c                __ctors_end = .
                0x000000000000032c                __dtors_start = .
 *(.dtors)
                0x000000000000032c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000032c        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x000000000000032c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000032c        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000338       0x1a /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
                0x0000000000000338                __do_copy_data
 .init4         0x0000000000000352       0x10 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000352                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000362        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000000000036a        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x000000000000036a                __vector_22
                0x000000000000036a                __vector_1
                0x000000000000036a                __vector_34
                0x000000000000036a                __vector_24
                0x000000000000036a                __vector_12
                0x000000000000036a                __bad_interrupt
                0x000000000000036a                __vector_6
                0x000000000000036a                __vector_31
                0x000000000000036a                __vector_3
                0x000000000000036a                __vector_23
                0x000000000000036a                __vector_30
                0x000000000000036a                __vector_25
                0x000000000000036a                __vector_11
                0x000000000000036a                __vector_17
                0x000000000000036a                __vector_19
                0x000000000000036a                __vector_7
                0x000000000000036a                __vector_27
                0x000000000000036a                __vector_5
                0x000000000000036a                __vector_33
                0x000000000000036a                __vector_4
                0x000000000000036a                __vector_9
                0x000000000000036a                __vector_2
                0x000000000000036a                __vector_15
                0x000000000000036a                __vector_8
                0x000000000000036a                __vector_26
                0x000000000000036a                __vector_14
                0x000000000000036a                __vector_10
                0x000000000000036a                __vector_16
                0x000000000000036a                __vector_18
 .text          0x000000000000036e      0x328 ./src/uart/uart.o
                0x000000000000036e                __vector_20
                0x00000000000003d2                __vector_21
                0x000000000000042e                uart_init
                0x0000000000000460                uart_getc
                0x0000000000000494                uart_putc
                0x00000000000004be                uart_puts
                0x00000000000004e6                uart_puts_p
                0x0000000000000502                __vector_28
                0x0000000000000566                __vector_29
                0x00000000000005c2                uart1_init
                0x00000000000005f4                uart1_getc
                0x0000000000000628                uart1_putc
                0x0000000000000652                uart1_puts
                0x000000000000067a                uart1_puts_p
 .text          0x0000000000000696      0x8a2 ./src/irmp/irmp.o
                0x000000000000083e                irmp_init
                0x0000000000000844                irmp_get_data
                0x0000000000000950                irmp_ISR
 .text          0x0000000000000f38        0x0 ./src/irmp/irmpextlog.o
 .text          0x0000000000000f38      0x394 ./src/ledDimmer.o
                0x0000000000000f38                tausche_zeiger
                0x0000000000000f7a                pwm_update
                0x00000000000011fa                __vector_32
                0x00000000000012b4                initDimmer
 .text          0x00000000000012cc      0x2f6 ./src/ledState.o
                0x00000000000012cc                updateRGBProgram
                0x00000000000013e6                nextStepRGBProgram
                0x0000000000001464                ledStateCallback
 .text          0x00000000000015c2      0x1e8 ./src/main.o
                0x00000000000015c2                decodeMessage
                0x00000000000016b2                __vector_13
                0x000000000000172e                timer1_init
                0x0000000000001748                main
 .text          0x00000000000017aa        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x00000000000017aa        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text          0x00000000000017aa        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .text          0x00000000000017aa        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .text          0x00000000000017aa        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
                0x00000000000017aa                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000000000017aa       0x28 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000017aa                __udivmodhi4
 .text.libgcc   0x00000000000017d2        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000017d2        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000017d2        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000017d2       0x12 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
                0x00000000000017d2                memcpy_P
                0x00000000000017e4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000017e4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                0x00000000000017e4                exit
                0x00000000000017e4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000017e4        0x4 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000017e8                _etext = .

.data           0x0000000000800100       0x78 load address 0x00000000000017e8
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .data          0x0000000000800100        0x0 ./src/uart/uart.o
 .data          0x0000000000800100        0x4 ./src/irmp/irmp.o
 .data          0x0000000000800104        0x0 ./src/irmp/irmpextlog.o
 .data          0x0000000000800104        0x9 ./src/ledDimmer.o
                0x0000000000800104                pwm_cnt_max
                0x0000000000800105                isr_ptr_time
                0x0000000000800107                main_ptr_time
                0x0000000000800109                isr_ptr_mask
                0x000000000080010b                main_ptr_mask
 .data          0x000000000080010d       0x6a ./src/ledState.o
                0x000000000080010d                ledBrightness
                0x000000000080010e                rgbBrightness
                0x000000000080010f                nextUpdateRGBProgramCall
                0x0000000000800111                rgbSpeed
                0x0000000000800112                rgbSpeedNew
                0x0000000000800113                rgbUpdateIntervals
                0x000000000080013b                rgbProgram
 .data          0x0000000000800177        0x0 ./src/main.o
 .data          0x0000000000800177        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800177        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800177        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800177        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800177        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800178                . = ALIGN (0x2)
 *fill*         0x0000000000800177        0x1 00
                0x0000000000800178                _edata = .
                0x0000000000800178                PROVIDE (__data_end, .)

.bss            0x0000000000800178      0x119
                0x0000000000800178                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .bss           0x0000000000800178       0x8a ./src/uart/uart.o
 .bss           0x0000000000800202       0x32 ./src/irmp/irmp.o
 .bss           0x0000000000800234        0x0 ./src/irmp/irmpextlog.o
 .bss           0x0000000000800234        0x1 ./src/ledDimmer.o
 .bss           0x0000000000800235        0x4 ./src/ledState.o
                0x0000000000800235                valueR
                0x0000000000800236                valueG
                0x0000000000800237                valueB
                0x0000000000800238                rgbProgramPointer
 .bss           0x0000000000800239        0x6 ./src/main.o
                0x0000000000800239                timerCounter
                0x000000000080023a                centiSeconds
                0x000000000080023e                nextCentiSecond
 .bss           0x000000000080023f        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080023f        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .bss           0x000000000080023f        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .bss           0x000000000080023f        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .bss           0x000000000080023f        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080023f       0x24 ./src/ledDimmer.o
                0x000000000080023f                pwm_mask
                0x0000000000800243                pwm_sync
                0x0000000000800244                pwm_timing_tmp
                0x000000000080024c                pwm_setting
                0x000000000080024f                pwm_timing
                0x0000000000800257                pwm_mask_tmp
                0x000000000080025b                pwm_setting_tmp
 COMMON         0x0000000000800263        0xe ./src/ledState.o
                0x0000000000800263                deltaR
                0x0000000000800264                signR
                0x0000000000800265                deltaB
                0x0000000000800266                signB
                0x0000000000800267                deltaG
                0x0000000000800268                signG
                0x0000000000800269                errG
                0x000000000080026b                errB
                0x000000000080026d                deltaT
                0x000000000080026f                errR
 COMMON         0x0000000000800271       0x20 ./src/main.o
                0x0000000000800271                messageNumber
                0x0000000000800272                messageLength
                0x0000000000800273                messageType
                0x0000000000800274                messageBuffer
                0x0000000000800291                PROVIDE (__bss_end, .)
                0x00000000000017e8                __data_load_start = LOADADDR (.data)
                0x0000000000001860                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800291        0x0
                0x0000000000800291                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800291                PROVIDE (__noinit_end, .)
                0x0000000000800291                _end = .
                0x0000000000800291                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x750
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .stab          0x00000000000006cc       0x84 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
                                         0x90 (size before relaxing)

.stabstr        0x0000000000000000       0x86
 *(.stabstr)
 .stabstr       0x0000000000000000       0x86 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ledDimmerFirmware.elf elf32-avr)
LOAD linker stubs
