Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o (exit)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
                              ./src/irmp/irmp.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                              ./src/uart/uart.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
                              ./src/irmp/irmp.o (memcpy_P)

Allocating common symbols
Common symbol       size              file

messageBuffer       0xb               ./src/main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
LOAD ./src/uart/uart.o
LOAD ./src/irmp/irmp.o
LOAD ./src/irmp/irmpextlog.o
LOAD ./src/main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xe5a
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000000000008c       0x77 ./src/irmp/irmp.o
 .progmem.data  0x0000000000000103        0x3 ./src/main.o
                0x0000000000000106                . = ALIGN (0x2)
                0x0000000000000106                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000106        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000106                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000106                __ctors_start = .
 *(.ctors)
                0x0000000000000106                __ctors_end = .
                0x0000000000000106                __dtors_start = .
 *(.dtors)
                0x0000000000000106                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000106        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x0000000000000106                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000106        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000112       0x1a /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
                0x0000000000000112                __do_copy_data
 .init4         0x000000000000012c       0x10 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
                0x000000000000012c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000013c        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000144        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
                0x0000000000000144                __vector_22
                0x0000000000000144                __vector_1
                0x0000000000000144                __vector_32
                0x0000000000000144                __vector_34
                0x0000000000000144                __vector_24
                0x0000000000000144                __vector_12
                0x0000000000000144                __bad_interrupt
                0x0000000000000144                __vector_6
                0x0000000000000144                __vector_31
                0x0000000000000144                __vector_3
                0x0000000000000144                __vector_23
                0x0000000000000144                __vector_30
                0x0000000000000144                __vector_25
                0x0000000000000144                __vector_11
                0x0000000000000144                __vector_13
                0x0000000000000144                __vector_17
                0x0000000000000144                __vector_19
                0x0000000000000144                __vector_7
                0x0000000000000144                __vector_27
                0x0000000000000144                __vector_5
                0x0000000000000144                __vector_33
                0x0000000000000144                __vector_4
                0x0000000000000144                __vector_9
                0x0000000000000144                __vector_2
                0x0000000000000144                __vector_15
                0x0000000000000144                __vector_8
                0x0000000000000144                __vector_26
                0x0000000000000144                __vector_14
                0x0000000000000144                __vector_10
                0x0000000000000144                __vector_16
                0x0000000000000144                __vector_18
 .text          0x0000000000000148      0x328 ./src/uart/uart.o
                0x0000000000000148                __vector_20
                0x00000000000001ac                __vector_21
                0x0000000000000208                uart_init
                0x000000000000023a                uart_getc
                0x000000000000026e                uart_putc
                0x0000000000000298                uart_puts
                0x00000000000002c0                uart_puts_p
                0x00000000000002dc                __vector_28
                0x0000000000000340                __vector_29
                0x000000000000039c                uart1_init
                0x00000000000003ce                uart1_getc
                0x0000000000000402                uart1_putc
                0x000000000000042c                uart1_puts
                0x0000000000000454                uart1_puts_p
 .text          0x0000000000000470      0x8a2 ./src/irmp/irmp.o
                0x0000000000000618                irmp_init
                0x000000000000061e                irmp_get_data
                0x000000000000072a                irmp_ISR
 .text          0x0000000000000d12        0x0 ./src/irmp/irmpextlog.o
 .text          0x0000000000000d12      0x132 ./src/main.o
                0x0000000000000d12                decodeMessage
                0x0000000000000d70                main
 .text          0x0000000000000e44        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000e44        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000e44        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000e44        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
                0x0000000000000e44                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000e44        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000e44        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000e44        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000e44       0x12 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
                0x0000000000000e44                memcpy_P
                0x0000000000000e56                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000e56        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
                0x0000000000000e56                exit
                0x0000000000000e56                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000e56        0x4 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000e5a                _etext = .

.data           0x0000000000800100       0x38 load address 0x0000000000000e5a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .data          0x0000000000800100        0x0 ./src/uart/uart.o
 .data          0x0000000000800100        0x4 ./src/irmp/irmp.o
 .data          0x0000000000800104        0x0 ./src/irmp/irmpextlog.o
 .data          0x0000000000800104       0x33 ./src/main.o
 .data          0x0000000000800137        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800137        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800137        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800137        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800138                . = ALIGN (0x2)
 *fill*         0x0000000000800137        0x1 00
                0x0000000000800138                _edata = .
                0x0000000000800138                PROVIDE (__data_end, .)

.bss            0x0000000000800138       0xc7
                0x0000000000800138                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800138        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .bss           0x0000000000800138       0x8a ./src/uart/uart.o
 .bss           0x00000000008001c2       0x32 ./src/irmp/irmp.o
 .bss           0x00000000008001f4        0x0 ./src/irmp/irmpextlog.o
 .bss           0x00000000008001f4        0x0 ./src/main.o
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_exit.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_copy_data.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.5.3/avr51/libgcc.a(_clear_bss.o)
 .bss           0x00000000008001f4        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008001f4        0xb ./src/main.o
                0x00000000008001f4                messageBuffer
                0x00000000008001ff                PROVIDE (__bss_end, .)
                0x0000000000000e5a                __data_load_start = LOADADDR (.data)
                0x0000000000000e92                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001ff        0x0
                0x00000000008001ff                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001ff                PROVIDE (__noinit_end, .)
                0x00000000008001ff                _end = .
                0x00000000008001ff                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x750
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o
 .stab          0x00000000000006cc       0x84 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/libc.a(memcpy_P.o)
                                         0x90 (size before relaxing)

.stabstr        0x0000000000000000       0x86
 *(.stabstr)
 .stabstr       0x0000000000000000       0x86 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr51/crtm1284p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ledDimmerFirmware.elf elf32-avr)
LOAD linker stubs
